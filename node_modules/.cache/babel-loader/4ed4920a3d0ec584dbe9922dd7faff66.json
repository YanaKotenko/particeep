{"ast":null,"code":"var _jsxFileName = \"/Users/y.kotenko/Desktop/particeep/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport classNames from 'classnames';\nimport { getMovies, evoluateMovie, deleteMovie, toggleCategoryState, setCategories } from './store/actions';\nimport style from './style.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    moviesList,\n    categories\n  } = useSelector(store => store.movies);\n  const [filter, setFilter] = useState([]);\n  useEffect(() => {\n    dispatch(getMovies());\n  }, []);\n  useEffect(() => {\n    makeCategories(moviesList);\n  }, [moviesList]);\n  useEffect(() => {\n    const checkedCategories = categories.filter(cat => cat.checked).map(cat => cat.title);\n    setFilter(checkedCategories);\n  }, [categories]);\n  useEffect(() => {\n    // filter.forEach((cat) => {\n    //   const filtered = moviesList.filter((movie) => movie.category === cat)\n    //   console.log('filtered', filtered);\n    //   return [...filtered];\n    // })\n    var filtered = workItems.filter(function (element) {\n      // Create an array using `.split()` method\n      var cats = element.category.split(' '); // Filter the returned array based on specified filters\n      // If the length of the returned filtered array is equal to\n      // length of the filters array the element should be returned  \n\n      return cats.filter(function (cat) {\n        return filtersArray.indexOf(cat) > -1;\n      }).length === filtersArray.length;\n    });\n  }, [filter]);\n  console.log(moviesList);\n  console.log('filter', filter);\n\n  const makeCategories = movies => {\n    const categories = movies.map(movie => ({\n      id: movie.id,\n      title: movie.category,\n      checked: false\n    }));\n    const titles = categories.map(cat => cat.title);\n    const filteredCategories = categories.filter(({\n      title\n    }, index) => !titles.includes(title, index + 1));\n    dispatch(setCategories(filteredCategories));\n  }; // const setLike = (id) => {\n  //   dispatch(likeMovie(id));\n  // }\n  // const setDislike = (id) => {\n  //   dispatch(dislikeMovie(id));\n  // }\n\n\n  const onEvoluateMovie = (id, action) => {\n    dispatch(evoluateMovie(id, action));\n  };\n\n  const onDeleteMovie = id => {\n    dispatch(deleteMovie(id));\n  };\n\n  const onToggleChecked = id => {\n    dispatch(toggleCategoryState(id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.Wrapper,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.Content,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.CategoriesFilter,\n        children: categories.map(category => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classNames(style.Category, category.checked ? style.CategorySelected : ''),\n          onClick: () => onToggleChecked(category.id),\n          children: category.title\n        }, category.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.Movies,\n        children: moviesList.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.Movie,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: style.MovieImageBox,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: style.MovieCategory,\n              children: movie.category\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: style.MovieDelete,\n              onClick: () => onDeleteMovie(movie.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: style.MovieImageFader\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              className: style.MovieImage,\n              src: movie.poster,\n              alt: \"poster\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: style.MovieImageBottom,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: style.MovieLikesBox,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: style.MovieLike,\n                  onClick: () => onEvoluateMovie(movie.id, 'like')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: style.MovieLikeCounter,\n                  children: movie.setLike ? movie.likes + 1 : movie.likes - 1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: style.MovieLikesBox,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: style.MovieDislike,\n                  onClick: () => onEvoluateMovie(movie.id, 'dislike')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: style.MovieDislikeCounter,\n                  children: movie.dislikes\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: style.MovieTextBox,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: style.MovieTitle,\n              children: movie.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this)]\n        }, movie.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"yOiMtew2lyTOrPw7q0wOJovbIvc=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/y.kotenko/Desktop/particeep/src/App.js"],"names":["React","useEffect","useState","useSelector","useDispatch","classNames","getMovies","evoluateMovie","deleteMovie","toggleCategoryState","setCategories","style","App","dispatch","moviesList","categories","store","movies","filter","setFilter","makeCategories","checkedCategories","cat","checked","map","title","filtered","workItems","element","cats","category","split","filtersArray","indexOf","length","console","log","movie","id","titles","filteredCategories","index","includes","onEvoluateMovie","action","onDeleteMovie","onToggleChecked","Wrapper","Content","CategoriesFilter","Category","CategorySelected","Movies","Movie","MovieImageBox","MovieCategory","MovieDelete","MovieImageFader","MovieImage","poster","MovieImageBottom","MovieLikesBox","MovieLike","MovieLikeCounter","setLike","likes","MovieDislike","MovieDislikeCounter","dislikes","MovieTextBox","MovieTitle"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport classNames from 'classnames';\nimport {\n  getMovies,\n  evoluateMovie,\n  deleteMovie,\n  toggleCategoryState,\n  setCategories,\n} from './store/actions';\nimport style from './style.module.scss';\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const { moviesList, categories } = useSelector((store) => store.movies);\n  const [filter, setFilter] = useState([]);\n\n  useEffect(() => {\n    dispatch(getMovies());\n  }, []);\n\n  useEffect(() => {\n    makeCategories(moviesList);\n  }, [moviesList]);\n\n  useEffect(() => {\n    const checkedCategories = categories.filter((cat) => cat.checked).map((cat) => cat.title);\n    setFilter(checkedCategories);\n  }, [categories]);\n\n  useEffect(() => {\n    // filter.forEach((cat) => {\n    //   const filtered = moviesList.filter((movie) => movie.category === cat)\n    //   console.log('filtered', filtered);\n    //   return [...filtered];\n    // })\n    var filtered = workItems.filter(function(element) {\n      // Create an array using `.split()` method\n      var cats = element.category.split(' ');\n   \n      // Filter the returned array based on specified filters\n      // If the length of the returned filtered array is equal to\n      // length of the filters array the element should be returned  \n      return cats.filter(function(cat) {\n          return filtersArray.indexOf(cat) > -1;\n      }).length === filtersArray.length;\n   });\n  }, [filter]);\n\n  console.log(moviesList);\n  console.log('filter', filter);\n\n  const makeCategories = (movies) => {\n    const categories = movies.map((movie) => ({\n      id: movie.id,\n      title: movie.category,\n      checked: false,\n    }));\n    const titles = categories.map((cat) => cat.title);\n    const filteredCategories = categories.filter(({title}, index) => !titles.includes(title, index + 1));\n    dispatch(setCategories(filteredCategories));\n  }\n\n  // const setLike = (id) => {\n  //   dispatch(likeMovie(id));\n  // }\n\n  // const setDislike = (id) => {\n  //   dispatch(dislikeMovie(id));\n  // }\n\n  const onEvoluateMovie = (id, action) => {\n    dispatch(evoluateMovie(id, action));\n  }\n\n  const onDeleteMovie = (id) => {\n    dispatch(deleteMovie(id));\n  }\n\n  const onToggleChecked = (id) => {\n    dispatch(toggleCategoryState(id));\n  }\n\n  return (\n    <div className={style.Wrapper}>\n      <div className={style.Content}>\n        <div className={style.CategoriesFilter}>\n          {categories.map((category) => (\n            <div\n              key={category.id}\n              className={classNames(style.Category, category.checked ? style.CategorySelected : '')}\n              onClick={() => onToggleChecked(category.id)}\n            >\n              {category.title}\n            </div>\n          ))}\n        </div>\n        <div className={style.Movies}>\n          {moviesList.map((movie) => (\n            <div key={movie.id} className={style.Movie}>\n              <div className={style.MovieImageBox}>\n                <div className={style.MovieCategory}>{movie.category}</div>\n                <div className={style.MovieDelete} onClick={() => onDeleteMovie(movie.id)}></div>\n                <div className={style.MovieImageFader}></div>\n                <img className={style.MovieImage} src={movie.poster} alt=\"poster\" />\n                <div className={style.MovieImageBottom}>\n                  <div className={style.MovieLikesBox}>\n                    <div className={style.MovieLike} onClick={() => onEvoluateMovie(movie.id, 'like')}></div>\n                    <div className={style.MovieLikeCounter}>{movie.setLike ? movie.likes + 1 : movie.likes - 1}</div>\n                  </div>\n                  <div className={style.MovieLikesBox}>\n                    <div className={style.MovieDislike} onClick={() => onEvoluateMovie(movie.id, 'dislike')}></div>\n                    <div className={style.MovieDislikeCounter}>{movie.dislikes}</div>\n                  </div>\n                </div>\n              </div>\n              <div className={style.MovieTextBox}>\n                <div className={style.MovieTitle}>{movie.title}</div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}