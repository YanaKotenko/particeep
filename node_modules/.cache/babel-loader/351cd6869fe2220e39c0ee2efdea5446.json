{"ast":null,"code":"import { GET_MOVIES, DELETE_MOVIE, SET_FILTERS_CATEGORIES, TOGGLE_CATEGORY_STATE, EVOLUATE_MOVIE } from './const';\nconst initState = {\n  moviesList: [],\n  categories: []\n};\n\nconst movieReducer = (state = initState, action) => {\n  switch (action.type) {\n    case GET_MOVIES:\n      return { ...state,\n        moviesList: action.moviesList\n      };\n\n    case SET_FILTERS_CATEGORIES:\n      {\n        const categories = action.categories.map(movie => ({\n          id: movie.id,\n          title: movie.category,\n          checked: false\n        }));\n        const titles = categories.map(cat => cat.title);\n        const filteredCategories = categories.filter(({\n          title\n        }, index) => {\n          return !titles.includes(title, index + 1);\n        });\n        return { ...state,\n          categories: filteredCategories\n        };\n      }\n\n    case DELETE_MOVIE:\n      {\n        const copyState = [...state.moviesList];\n        const filtered = copyState.filter(movie => movie.id !== action.id);\n        return { ...state,\n          moviesList: filtered\n        };\n      }\n\n    case TOGGLE_CATEGORY_STATE:\n      {\n        const copyStateCategories = [...state.categories];\n        const selectedCategory = copyStateCategories.find(cat => cat.id === action.id);\n\n        if (selectedCategory.checked) {\n          selectedCategory.checked = false;\n        } else {\n          selectedCategory.checked = true;\n        }\n\n        return { ...state,\n          categories: copyStateCategories\n        };\n      }\n\n    case EVOLUATE_MOVIE:\n      {\n        const copyState = [...state.moviesList];\n        const movie = copyState.find(movie => movie.id === action.id);\n\n        if (action.action === 'like') {\n          movie.setLike = true;\n          movie.setDislike = false;\n        } else if (action.action === 'dislike') {\n          movie.setDislike = true;\n          movie.setLike = false;\n        }\n\n        return { ...state,\n          moviesList: copyState\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default movieReducer;","map":{"version":3,"sources":["/Users/y.kotenko/Desktop/particeep/src/store/reducer.js"],"names":["GET_MOVIES","DELETE_MOVIE","SET_FILTERS_CATEGORIES","TOGGLE_CATEGORY_STATE","EVOLUATE_MOVIE","initState","moviesList","categories","movieReducer","state","action","type","map","movie","id","title","category","checked","titles","cat","filteredCategories","filter","index","includes","copyState","filtered","copyStateCategories","selectedCategory","find","setLike","setDislike"],"mappings":"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","sourcesContent":["import {\n  GET_MOVIES,\n  DELETE_MOVIE,\n  SET_FILTERS_CATEGORIES,\n\tTOGGLE_CATEGORY_STATE,\n\tEVOLUATE_MOVIE,\n} from './const';\n\nconst initState = {\n  moviesList: [],\n\tcategories: [],\n};\n\nconst movieReducer = (state = initState, action) => {\n  switch (action.type) {\n    case GET_MOVIES:\n      return {\n        ...state,\n        moviesList: action.moviesList,\n      };\n\n    case SET_FILTERS_CATEGORIES: {\n\t\t\tconst categories = action.categories.map((movie) => ({\n\t\t\t\tid: movie.id,\n\t\t\t\ttitle: movie.category,\n\t\t\t\tchecked: false,\n\t\t\t}))\n\t\t\tconst titles = categories.map((cat) => cat.title);\n\t\t\tconst filteredCategories = categories.filter(({title}, index) => {\n\t\t\t\treturn !titles.includes(title, index + 1)\n\t\t\t})\n\n      return {\n        ...state,\n        categories: filteredCategories,\n      };\n\t\t}\n\n    case DELETE_MOVIE: {\n\t\t\tconst copyState = [...state.moviesList];\n\t\t\tconst filtered = copyState.filter((movie) => movie.id !== action.id);\n        \n      return {\n        ...state,\n        moviesList: filtered,\n      };\n    }\n\n    case TOGGLE_CATEGORY_STATE: {\n\t\t\tconst copyStateCategories = [...state.categories];\n\t\t\tconst selectedCategory = copyStateCategories.find((cat) => cat.id === action.id);\n\t\t\tif (selectedCategory.checked) {\n\t\t\t\tselectedCategory.checked = false;\n\t\t\t} else {\n\t\t\t\tselectedCategory.checked = true;\n\t\t\t}\n        \n      return {\n        ...state,\n        categories: copyStateCategories,\n      };\n    }\n\n    case EVOLUATE_MOVIE: {\n\t\t\tconst copyState = [...state.moviesList];\n\t\t\tconst movie = copyState.find((movie) => movie.id === action.id);\n\t\t\tif (action.action === 'like') {\n\t\t\t\tmovie.setLike = true;\n\t\t\t\tmovie.setDislike = false;\n\t\t\t} else if (action.action === 'dislike') {\n\t\t\t\tmovie.setDislike = true;\n\t\t\t\tmovie.setLike = false;\n\t\t\t}\n        \n      return {\n        ...state,\n        moviesList: copyState,\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default movieReducer;\n"]},"metadata":{},"sourceType":"module"}