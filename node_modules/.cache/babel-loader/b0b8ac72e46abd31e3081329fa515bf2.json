{"ast":null,"code":"import { movies$ } from './api';\nimport { GET_MOVIES, DELETE_MOVIE, SET_FILTERS_CATEGORIES, TOGGLE_CATEGORY_STATE, EVOLUATE_MOVIE } from './const';\nexport const getMovies = () => dispatch => {\n  movies$.then(res => {\n    dispatch({\n      type: GET_MOVIES,\n      moviesList: res\n    });\n  });\n};\nexport const getCategories = () => dispatch => {\n  movies$.then(res => {\n    const categories = res.map(movie => ({\n      id: movie.id,\n      title: movie.category,\n      checked: false\n    }));\n    const titles = categories.map(cat => cat.title);\n    const filteredCategories = categories.filter(({\n      title\n    }, index) => {\n      return !titles.includes(title, index + 1);\n    });\n    dispatch({\n      type: SET_FILTERS_CATEGORIES,\n      categories: res\n    });\n  });\n};\nexport const deleteMovie = id => dispatch => {\n  dispatch({\n    type: DELETE_MOVIE,\n    id\n  });\n};\nexport const toggleCategoryState = id => dispatch => {\n  dispatch({\n    type: TOGGLE_CATEGORY_STATE,\n    id\n  });\n};\nexport const evoluateMovie = (id, action) => dispatch => {\n  dispatch({\n    type: EVOLUATE_MOVIE,\n    id,\n    action\n  });\n};","map":{"version":3,"sources":["/Users/y.kotenko/Desktop/particeep/src/store/actions.js"],"names":["movies$","GET_MOVIES","DELETE_MOVIE","SET_FILTERS_CATEGORIES","TOGGLE_CATEGORY_STATE","EVOLUATE_MOVIE","getMovies","dispatch","then","res","type","moviesList","getCategories","categories","map","movie","id","title","category","checked","titles","cat","filteredCategories","filter","index","includes","deleteMovie","toggleCategoryState","evoluateMovie","action"],"mappings":"AAAA,SAASA,OAAT,QAAwB,OAAxB;AACA,SACEC,UADF,EAEEC,YAFF,EAGEC,sBAHF,EAIEC,qBAJF,EAKEC,cALF,QAMO,SANP;AAQA,OAAO,MAAMC,SAAS,GAAG,MAAOC,QAAD,IAAc;AAC3CP,EAAAA,OAAO,CAACQ,IAAR,CAAcC,GAAD,IAAS;AACpBF,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAET,UAAR;AAAoBU,MAAAA,UAAU,EAAEF;AAAhC,KAAD,CAAR;AACD,GAFD;AAGD,CAJM;AAMP,OAAO,MAAMG,aAAa,GAAG,MAAOL,QAAD,IAAc;AAC/CP,EAAAA,OAAO,CAACQ,IAAR,CAAcC,GAAD,IAAS;AACpB,UAAMI,UAAU,GAAGJ,GAAG,CAACK,GAAJ,CAASC,KAAD,KAAY;AACrCC,MAAAA,EAAE,EAAED,KAAK,CAACC,EAD2B;AAErCC,MAAAA,KAAK,EAAEF,KAAK,CAACG,QAFwB;AAGrCC,MAAAA,OAAO,EAAE;AAH4B,KAAZ,CAAR,CAAnB;AAKA,UAAMC,MAAM,GAAGP,UAAU,CAACC,GAAX,CAAgBO,GAAD,IAASA,GAAG,CAACJ,KAA5B,CAAf;AACA,UAAMK,kBAAkB,GAAGT,UAAU,CAACU,MAAX,CAAkB,CAAC;AAACN,MAAAA;AAAD,KAAD,EAAUO,KAAV,KAAoB;AAC/D,aAAO,CAACJ,MAAM,CAACK,QAAP,CAAgBR,KAAhB,EAAuBO,KAAK,GAAG,CAA/B,CAAR;AACD,KAF0B,CAA3B;AAGAjB,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAEP,sBAAR;AAAgCU,MAAAA,UAAU,EAAEJ;AAA5C,KAAD,CAAR;AACD,GAXD;AAYD,CAbM;AAeP,OAAO,MAAMiB,WAAW,GAAIV,EAAD,IAAST,QAAD,IAAc;AAC/CA,EAAAA,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAER,YAAR;AAAsBc,IAAAA;AAAtB,GAAD,CAAR;AACD,CAFM;AAIP,OAAO,MAAMW,mBAAmB,GAAIX,EAAD,IAAST,QAAD,IAAc;AACvDA,EAAAA,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAEN,qBAAR;AAA+BY,IAAAA;AAA/B,GAAD,CAAR;AACD,CAFM;AAIP,OAAO,MAAMY,aAAa,GAAG,CAACZ,EAAD,EAAKa,MAAL,KAAiBtB,QAAD,IAAc;AACzDA,EAAAA,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAEL,cAAR;AAAwBW,IAAAA,EAAxB;AAA4Ba,IAAAA;AAA5B,GAAD,CAAR;AACD,CAFM","sourcesContent":["import { movies$ } from './api';\nimport {\n  GET_MOVIES,\n  DELETE_MOVIE,\n  SET_FILTERS_CATEGORIES,\n  TOGGLE_CATEGORY_STATE,\n  EVOLUATE_MOVIE,\n} from './const';\n\nexport const getMovies = () => (dispatch) => {\n  movies$.then((res) => {\n    dispatch({ type: GET_MOVIES, moviesList: res });\n  });\n};\n\nexport const getCategories = () => (dispatch) => {\n  movies$.then((res) => {\n    const categories = res.map((movie) => ({\n      id: movie.id,\n      title: movie.category,\n      checked: false,\n    }))\n    const titles = categories.map((cat) => cat.title);\n    const filteredCategories = categories.filter(({title}, index) => {\n      return !titles.includes(title, index + 1)\n    })\n    dispatch({ type: SET_FILTERS_CATEGORIES, categories: res });\n  });\n};\n\nexport const deleteMovie = (id) => (dispatch) => {\n  dispatch({ type: DELETE_MOVIE, id });\n};\n\nexport const toggleCategoryState = (id) => (dispatch) => {\n  dispatch({ type: TOGGLE_CATEGORY_STATE, id });\n};\n\nexport const evoluateMovie = (id, action) => (dispatch) => {\n  dispatch({ type: EVOLUATE_MOVIE, id, action });\n};\n"]},"metadata":{},"sourceType":"module"}