{"ast":null,"code":"import { GET_MOVIES, DELETE_MOVIE, SET_FILTERS_CATEGORIES, TOGGLE_CATEGORY_STATE, EVOLUATE_MOVIE } from './const';\nconst initState = {\n  moviesList: [],\n  categories: []\n};\n\nconst movieReducer = (state = initState, action) => {\n  switch (action.type) {\n    case GET_MOVIES:\n      return { ...state,\n        moviesList: action.moviesList\n      };\n\n    case SET_FILTERS_CATEGORIES:\n      {\n        const categories = action.categories.map(movie => {\n          return {\n            id: movie.id,\n            title: movie.category\n          };\n        }).map(movie => {\n          return action.categories.find(a => a.id === id);\n        }); // const filtered = categories.filter((category, index) => {\n        // \tconsole.log(categories.indexOf(category));\n        // \treturn categories.indexOf(category.title) === index\n        // });\n\n        console.log(filtered);\n        return { ...state,\n          categories: filtered\n        };\n      }\n\n    case DELETE_MOVIE:\n      {\n        const copyState = [...state.moviesList];\n        const filtered = copyState.filter(movie => movie.id !== action.id);\n        return { ...state,\n          moviesList: filtered\n        };\n      }\n    // case TOGGLE_CATEGORY_STATE: {\n    // \tconst copyState = [...state.moviesList]\n    // \tconst likedMovie = copyState.find((movie) => movie.id === action.id);\n    // \tlikedMovie.likes += 1\n    //   return {\n    //     ...state,\n    //     moviesList: copyState,\n    //   };\n    // }\n\n    case EVOLUATE_MOVIE:\n      {\n        const copyState = [...state.moviesList];\n        const movie = copyState.find(movie => movie.id === action.id);\n\n        if (action.action === 'like') {\n          movie.setLike = true;\n          movie.setDislike = false;\n        } else if (action.action === 'dislike') {\n          movie.setDislike = true;\n          movie.setLike = false;\n        }\n\n        return { ...state,\n          moviesList: copyState\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default movieReducer;","map":{"version":3,"sources":["/Users/y.kotenko/Desktop/particeep/src/store/reducer.js"],"names":["GET_MOVIES","DELETE_MOVIE","SET_FILTERS_CATEGORIES","TOGGLE_CATEGORY_STATE","EVOLUATE_MOVIE","initState","moviesList","categories","movieReducer","state","action","type","map","movie","id","title","category","find","a","console","log","filtered","copyState","filter","setLike","setDislike"],"mappings":"AAAA,SACEA,UADF,EAEEC,YAFF,EAGEC,sBAHF,EAICC,qBAJD,EAKCC,cALD,QAMO,SANP;AAQA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,UAAU,EAAE,EADI;AAEjBC,EAAAA,UAAU,EAAE;AAFK,CAAlB;;AAKA,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGJ,SAAT,EAAoBK,MAApB,KAA+B;AAClD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKX,UAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELH,QAAAA,UAAU,EAAEI,MAAM,CAACJ;AAFd,OAAP;;AAKF,SAAKJ,sBAAL;AAA6B;AAC9B,cAAMK,UAAU,GAAGG,MAAM,CAACH,UAAP,CAAkBK,GAAlB,CAAuBC,KAAD,IAAW;AACnD,iBAAO;AACNC,YAAAA,EAAE,EAAED,KAAK,CAACC,EADJ;AAENC,YAAAA,KAAK,EAAEF,KAAK,CAACG;AAFP,WAAP;AAIA,SALkB,EAKhBJ,GALgB,CAKXC,KAAD,IAAW;AACjB,iBAAOH,MAAM,CAACH,UAAP,CAAkBU,IAAlB,CAAuBC,CAAC,IAAIA,CAAC,CAACJ,EAAF,KAASA,EAArC,CAAP;AACA,SAPkB,CAAnB,CAD8B,CAU9B;AACA;AAEA;AACA;;AACAK,QAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ;AAEG,eAAO,EACL,GAAGZ,KADE;AAELF,UAAAA,UAAU,EAAEc;AAFP,SAAP;AAIH;;AAEC,SAAKpB,YAAL;AAAmB;AACpB,cAAMqB,SAAS,GAAG,CAAC,GAAGb,KAAK,CAACH,UAAV,CAAlB;AACA,cAAMe,QAAQ,GAAGC,SAAS,CAACC,MAAV,CAAkBV,KAAD,IAAWA,KAAK,CAACC,EAAN,KAAaJ,MAAM,CAACI,EAAhD,CAAjB;AAEG,eAAO,EACL,GAAGL,KADE;AAELH,UAAAA,UAAU,EAAEe;AAFP,SAAP;AAID;AAED;AACF;AACA;AACA;AAEE;AACA;AACA;AACA;AACA;;AAEA,SAAKjB,cAAL;AAAqB;AACtB,cAAMkB,SAAS,GAAG,CAAC,GAAGb,KAAK,CAACH,UAAV,CAAlB;AACA,cAAMO,KAAK,GAAGS,SAAS,CAACL,IAAV,CAAgBJ,KAAD,IAAWA,KAAK,CAACC,EAAN,KAAaJ,MAAM,CAACI,EAA9C,CAAd;;AACA,YAAIJ,MAAM,CAACA,MAAP,KAAkB,MAAtB,EAA8B;AAC7BG,UAAAA,KAAK,CAACW,OAAN,GAAgB,IAAhB;AACAX,UAAAA,KAAK,CAACY,UAAN,GAAmB,KAAnB;AACA,SAHD,MAGO,IAAIf,MAAM,CAACA,MAAP,KAAkB,SAAtB,EAAiC;AACvCG,UAAAA,KAAK,CAACY,UAAN,GAAmB,IAAnB;AACAZ,UAAAA,KAAK,CAACW,OAAN,GAAgB,KAAhB;AACA;;AAEE,eAAO,EACL,GAAGf,KADE;AAELH,UAAAA,UAAU,EAAEgB;AAFP,SAAP;AAID;;AAED;AACE,aAAOb,KAAP;AArEJ;AAuED,CAxED;;AA0EA,eAAeD,YAAf","sourcesContent":["import {\n  GET_MOVIES,\n  DELETE_MOVIE,\n  SET_FILTERS_CATEGORIES,\n\tTOGGLE_CATEGORY_STATE,\n\tEVOLUATE_MOVIE,\n} from './const';\n\nconst initState = {\n  moviesList: [],\n\tcategories: [],\n};\n\nconst movieReducer = (state = initState, action) => {\n  switch (action.type) {\n    case GET_MOVIES:\n      return {\n        ...state,\n        moviesList: action.moviesList,\n      };\n\n    case SET_FILTERS_CATEGORIES: {\n\t\t\tconst categories = action.categories.map((movie) => {\n\t\t\t\treturn {\n\t\t\t\t\tid: movie.id,\n\t\t\t\t\ttitle: movie.category,\n\t\t\t\t}\n\t\t\t}).map((movie) => {\n\t\t\t\treturn action.categories.find(a => a.id === id)\n\t\t\t})\n\t\t \n\t\t\t// const filtered = categories.filter((category, index) => {\n\t\t\t// \tconsole.log(categories.indexOf(category));\n\n\t\t\t// \treturn categories.indexOf(category.title) === index\n\t\t\t// });\n\t\t\tconsole.log(filtered);\n\n      return {\n        ...state,\n        categories: filtered,\n      };\n\t\t}\n\n    case DELETE_MOVIE: {\n\t\t\tconst copyState = [...state.moviesList];\n\t\t\tconst filtered = copyState.filter((movie) => movie.id !== action.id);\n        \n      return {\n        ...state,\n        moviesList: filtered,\n      };\n    }\n\n    // case TOGGLE_CATEGORY_STATE: {\n\t\t// \tconst copyState = [...state.moviesList]\n\t\t// \tconst likedMovie = copyState.find((movie) => movie.id === action.id);\n\t\t// \tlikedMovie.likes += 1\n        \n    //   return {\n    //     ...state,\n    //     moviesList: copyState,\n    //   };\n    // }\n\n    case EVOLUATE_MOVIE: {\n\t\t\tconst copyState = [...state.moviesList];\n\t\t\tconst movie = copyState.find((movie) => movie.id === action.id);\n\t\t\tif (action.action === 'like') {\n\t\t\t\tmovie.setLike = true;\n\t\t\t\tmovie.setDislike = false;\n\t\t\t} else if (action.action === 'dislike') {\n\t\t\t\tmovie.setDislike = true;\n\t\t\t\tmovie.setLike = false;\n\t\t\t}\n        \n      return {\n        ...state,\n        moviesList: copyState,\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default movieReducer;\n"]},"metadata":{},"sourceType":"module"}