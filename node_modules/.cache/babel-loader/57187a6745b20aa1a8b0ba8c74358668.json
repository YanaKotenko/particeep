{"ast":null,"code":"var _jsxFileName = \"/Users/y.kotenko/Desktop/particeep/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport classNames from 'classnames';\nimport { getMovies, evoluateMovie, deleteMovie, toggleCategoryState, setCategories } from './store/actions';\nimport style from './style.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    moviesList,\n    categories\n  } = useSelector(store => store.movies);\n  const [filter, setFilter] = useState([]);\n  useEffect(() => {\n    dispatch(getMovies());\n  }, []);\n  useEffect(() => {\n    makeCategories(moviesList);\n  }, [moviesList]);\n  useEffect(() => {\n    const checkedCategories = categories.filter(cat => cat.checked).map(cat => cat.title);\n    setFilter(checkedCategories);\n  }, [categories]); // useEffect(() => {\n  //   // filter.forEach((cat) => {\n  //   //   const filtered = moviesList.filter((movie) => movie.category === cat)\n  //   //   console.log('filtered', filtered);\n  //   //   return [...filtered];\n  //   // })\n  //   var filtered = moviesList.filter((element) => {\n  //     // var cats = element.category.split(' ');\n  //     // console.log('cats', cats);\n  //     return filter.filter((cat) => filter.indexOf(cat) > -1).length === filter.length;\n  //  });\n  //  console.log('filtered', filtered);\n  // }, [filter]);\n\n  console.log(moviesList);\n\n  const makeCategories = movies => {\n    const categories = movies.map(movie => ({\n      id: movie.id,\n      title: movie.category,\n      checked: false\n    }));\n    const titles = categories.map(cat => cat.title);\n    const filteredCategories = categories.filter(({\n      title\n    }, index) => !titles.includes(title, index + 1));\n    dispatch(setCategories(filteredCategories));\n  };\n\n  const onEvoluateMovie = (id, action) => {\n    dispatch(evoluateMovie(id, action));\n  };\n\n  const onDeleteMovie = id => {\n    dispatch(deleteMovie(id));\n  };\n\n  const onToggleChecked = id => {\n    dispatch(toggleCategoryState(id));\n  };\n\n  const Icon = () => /*#__PURE__*/_jsxDEV(\"svg\", {\n    viewBox: \"0 0 24 24\",\n    fill: \"currentColor\",\n    preserveAspectRatio: \"xMidYMid meet\",\n    focusable: \"false\",\n    children: /*#__PURE__*/_jsxDEV(\"g\", {\n      children: /*#__PURE__*/_jsxDEV(\"path\", {\n        d: \"M1 21h4V9H1v12zm22-11c0-1.1-.9-2-2-2h-6.31l.95-4.57.03-.32c0-.41-.17-.79-.44-1.06L14.17 1 7.59 7.59C7.22 7.95 7 8.45 7 9v10c0 1.1.9 2 2 2h9c.83 0 1.54-.5 1.84-1.22l3.02-7.05c.09-.23.14-.47.14-.73v-1.91l-.01-.01L23 10z\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.Wrapper,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.Content,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.CategoriesFilter,\n        children: categories.map(category => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classNames(style.Category, category.checked ? style.CategorySelected : ''),\n          onClick: () => onToggleChecked(category.id),\n          children: category.title\n        }, category.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.Movies,\n        children: moviesList.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.Movie,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: style.MovieImageBox,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: style.MovieCategory,\n              children: movie.category\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: style.MovieDelete,\n              onClick: () => onDeleteMovie(movie.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: style.MovieImageFader\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              className: style.MovieImage,\n              src: movie.poster,\n              alt: \"poster\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: style.MovieImageBottom,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: style.MovieLikesBox,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: classNames(style.MovieLike, movie.setLike ? style.CheckedIcon : ''),\n                  onClick: () => onEvoluateMovie(movie.id, 'like'),\n                  children: /*#__PURE__*/_jsxDEV(Icon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 106,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: style.MovieLikeCounter,\n                  children: movie.likes\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: classNames(style.MovieDislikeCounter, movie.setDislike ? style.CheckedIcon : ''),\n                  children: movie.likes\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: style.MovieLikesBox,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: classNames(style.MovieDislike, movie.setDislike ? style.CheckedIcon : ''),\n                  onClick: () => onEvoluateMovie(movie.id, 'dislike'),\n                  children: /*#__PURE__*/_jsxDEV(Icon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 116,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: classNames(style.MovieDislikeCounter, movie.setDislike ? style.CheckedIcon : ''),\n                  children: movie.dislikes\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: style.MovieTextBox,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: style.MovieTitle,\n              children: movie.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this)]\n        }, movie.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"XJgeXVVHnvZH1dq6cdC7CnKIH/U=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/y.kotenko/Desktop/particeep/src/App.js"],"names":["React","useEffect","useState","useSelector","useDispatch","classNames","getMovies","evoluateMovie","deleteMovie","toggleCategoryState","setCategories","style","App","dispatch","moviesList","categories","store","movies","filter","setFilter","makeCategories","checkedCategories","cat","checked","map","title","console","log","movie","id","category","titles","filteredCategories","index","includes","onEvoluateMovie","action","onDeleteMovie","onToggleChecked","Icon","Wrapper","Content","CategoriesFilter","Category","CategorySelected","Movies","Movie","MovieImageBox","MovieCategory","MovieDelete","MovieImageFader","MovieImage","poster","MovieImageBottom","MovieLikesBox","MovieLike","setLike","CheckedIcon","MovieLikeCounter","likes","MovieDislikeCounter","setDislike","MovieDislike","dislikes","MovieTextBox","MovieTitle"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport classNames from 'classnames';\nimport {\n  getMovies,\n  evoluateMovie,\n  deleteMovie,\n  toggleCategoryState,\n  setCategories,\n} from './store/actions';\nimport style from './style.module.scss';\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const { moviesList, categories } = useSelector((store) => store.movies);\n  const [filter, setFilter] = useState([]);\n\n  useEffect(() => {\n    dispatch(getMovies());\n  }, []);\n\n  useEffect(() => {\n    makeCategories(moviesList);\n  }, [moviesList]);\n\n  useEffect(() => {\n    const checkedCategories = categories.filter((cat) => cat.checked).map((cat) => cat.title);\n    setFilter(checkedCategories);\n  }, [categories]);\n\n  // useEffect(() => {\n  //   // filter.forEach((cat) => {\n  //   //   const filtered = moviesList.filter((movie) => movie.category === cat)\n  //   //   console.log('filtered', filtered);\n  //   //   return [...filtered];\n  //   // })\n  //   var filtered = moviesList.filter((element) => {\n  //     // var cats = element.category.split(' ');\n  //     // console.log('cats', cats);\n  //     return filter.filter((cat) => filter.indexOf(cat) > -1).length === filter.length;\n  //  });\n  //  console.log('filtered', filtered);\n  // }, [filter]);\n\n  console.log(moviesList);\n\n  const makeCategories = (movies) => {\n    const categories = movies.map((movie) => ({\n      id: movie.id,\n      title: movie.category,\n      checked: false,\n    }));\n    const titles = categories.map((cat) => cat.title);\n    const filteredCategories = categories.filter(({title}, index) => !titles.includes(title, index + 1));\n    dispatch(setCategories(filteredCategories));\n  }\n\n  const onEvoluateMovie = (id, action) => {\n    dispatch(evoluateMovie(id, action));\n  }\n\n  const onDeleteMovie = (id) => {\n    dispatch(deleteMovie(id));\n  }\n\n  const onToggleChecked = (id) => {\n    dispatch(toggleCategoryState(id));\n  }\n\n  const Icon = () => (\n    <svg viewBox=\"0 0 24 24\" fill=\"currentColor\" preserveAspectRatio=\"xMidYMid meet\" focusable=\"false\">\n      <g>\n        <path d=\"M1 21h4V9H1v12zm22-11c0-1.1-.9-2-2-2h-6.31l.95-4.57.03-.32c0-.41-.17-.79-.44-1.06L14.17 1 7.59 7.59C7.22 7.95 7 8.45 7 9v10c0 1.1.9 2 2 2h9c.83 0 1.54-.5 1.84-1.22l3.02-7.05c.09-.23.14-.47.14-.73v-1.91l-.01-.01L23 10z\"></path>\n      </g>\n    </svg>\n  )\n\n  return (\n    <div className={style.Wrapper}>\n      <div className={style.Content}>\n        <div className={style.CategoriesFilter}>\n          {categories.map((category) => (\n            <div\n              key={category.id}\n              className={classNames(style.Category, category.checked ? style.CategorySelected : '')}\n              onClick={() => onToggleChecked(category.id)}\n            >\n              {category.title}\n            </div>\n          ))}\n        </div>\n        <div className={style.Movies}>\n          {moviesList.map((movie) => (\n            <div key={movie.id} className={style.Movie}>\n              <div className={style.MovieImageBox}>\n                <div className={style.MovieCategory}>{movie.category}</div>\n                <div className={style.MovieDelete} onClick={() => onDeleteMovie(movie.id)}></div>\n                <div className={style.MovieImageFader}></div>\n                <img className={style.MovieImage} src={movie.poster} alt=\"poster\" />\n                <div className={style.MovieImageBottom}>\n                  <div className={style.MovieLikesBox}>\n                    <div\n                      className={classNames(style.MovieLike, movie.setLike ? style.CheckedIcon : '')}\n                      onClick={() => onEvoluateMovie(movie.id, 'like')}\n                    >\n                      <Icon />\n                    </div>\n                    <div className={style.MovieLikeCounter}>{movie.likes}</div>\n                    <div className={classNames(style.MovieDislikeCounter, movie.setDislike ? style.CheckedIcon : '')}>{movie.likes}</div>\n                  </div>\n                  <div className={style.MovieLikesBox}>\n                    <div\n                      className={classNames(style.MovieDislike, movie.setDislike ? style.CheckedIcon : '')}\n                      onClick={() => onEvoluateMovie(movie.id, 'dislike')}\n                    >\n                      <Icon />\n                    </div>\n                    <div className={classNames(style.MovieDislikeCounter, movie.setDislike ? style.CheckedIcon : '')}>{movie.dislikes}</div>\n                  </div>\n                </div>\n              </div>\n              <div className={style.MovieTextBox}>\n                <div className={style.MovieTitle}>{movie.title}</div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}