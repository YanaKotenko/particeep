{"ast":null,"code":"import { GET_MOVIES, DELETE_MOVIE, SET_FILTERS_CATEGORIES, TOGGLE_CATEGORY_STATE, EVOLUATE_MOVIE } from './const';\nconst initState = {\n  moviesList: [],\n  categories: []\n};\n\nconst movieReducer = (state = initState, action) => {\n  switch (action.type) {\n    case GET_MOVIES:\n      return { ...state,\n        moviesList: action.moviesList\n      };\n\n    case SET_FILTERS_CATEGORIES:\n      {\n        // const categories = action.categories.map((movie) => ({\n        // \tid: movie.id,\n        // \ttitle: movie.category,\n        // \tchecked: false,\n        // }))\n        // const titles = categories.map((cat) => cat.title);\n        // const filteredCategories = categories.filter(({title}, index) => {\n        // \treturn !titles.includes(title, index + 1)\n        // })\n        return { ...state,\n          categories: filteredCategories\n        };\n      }\n\n    case DELETE_MOVIE:\n      {\n        const copyState = [...state.moviesList];\n        const filtered = copyState.filter(movie => movie.id !== action.id);\n        return { ...state,\n          moviesList: filtered\n        };\n      }\n\n    case TOGGLE_CATEGORY_STATE:\n      {\n        const copyStateCategories = [...state.categories];\n        const selectedCategory = copyStateCategories.find(cat => cat.id === action.id);\n\n        if (selectedCategory.checked) {\n          selectedCategory.checked = false;\n        } else {\n          selectedCategory.checked = true;\n        }\n\n        return { ...state,\n          categories: copyStateCategories\n        };\n      }\n\n    case EVOLUATE_MOVIE:\n      {\n        const copyState = [...state.moviesList];\n        const movie = copyState.find(movie => movie.id === action.id);\n\n        if (action.action === 'like') {\n          movie.setLike = true;\n          movie.setDislike = false;\n        } else if (action.action === 'dislike') {\n          movie.setDislike = true;\n          movie.setLike = false;\n        }\n\n        return { ...state,\n          moviesList: copyState\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default movieReducer;","map":{"version":3,"sources":["/Users/y.kotenko/Desktop/particeep/src/store/reducer.js"],"names":["GET_MOVIES","DELETE_MOVIE","SET_FILTERS_CATEGORIES","TOGGLE_CATEGORY_STATE","EVOLUATE_MOVIE","initState","moviesList","categories","movieReducer","state","action","type","filteredCategories","copyState","filtered","filter","movie","id","copyStateCategories","selectedCategory","find","cat","checked","setLike","setDislike"],"mappings":"AAAA,SACEA,UADF,EAEEC,YAFF,EAGEC,sBAHF,EAICC,qBAJD,EAKCC,cALD,QAMO,SANP;AAQA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,UAAU,EAAE,EADI;AAEjBC,EAAAA,UAAU,EAAE;AAFK,CAAlB;;AAKA,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGJ,SAAT,EAAoBK,MAApB,KAA+B;AAClD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKX,UAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELH,QAAAA,UAAU,EAAEI,MAAM,CAACJ;AAFd,OAAP;;AAKF,SAAKJ,sBAAL;AAA6B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEG,eAAO,EACL,GAAGO,KADE;AAELF,UAAAA,UAAU,EAAEK;AAFP,SAAP;AAIH;;AAEC,SAAKX,YAAL;AAAmB;AACpB,cAAMY,SAAS,GAAG,CAAC,GAAGJ,KAAK,CAACH,UAAV,CAAlB;AACA,cAAMQ,QAAQ,GAAGD,SAAS,CAACE,MAAV,CAAkBC,KAAD,IAAWA,KAAK,CAACC,EAAN,KAAaP,MAAM,CAACO,EAAhD,CAAjB;AAEG,eAAO,EACL,GAAGR,KADE;AAELH,UAAAA,UAAU,EAAEQ;AAFP,SAAP;AAID;;AAED,SAAKX,qBAAL;AAA4B;AAC7B,cAAMe,mBAAmB,GAAG,CAAC,GAAGT,KAAK,CAACF,UAAV,CAA5B;AACA,cAAMY,gBAAgB,GAAGD,mBAAmB,CAACE,IAApB,CAA0BC,GAAD,IAASA,GAAG,CAACJ,EAAJ,KAAWP,MAAM,CAACO,EAApD,CAAzB;;AACA,YAAIE,gBAAgB,CAACG,OAArB,EAA8B;AAC7BH,UAAAA,gBAAgB,CAACG,OAAjB,GAA2B,KAA3B;AACA,SAFD,MAEO;AACNH,UAAAA,gBAAgB,CAACG,OAAjB,GAA2B,IAA3B;AACA;;AAEE,eAAO,EACL,GAAGb,KADE;AAELF,UAAAA,UAAU,EAAEW;AAFP,SAAP;AAID;;AAED,SAAKd,cAAL;AAAqB;AACtB,cAAMS,SAAS,GAAG,CAAC,GAAGJ,KAAK,CAACH,UAAV,CAAlB;AACA,cAAMU,KAAK,GAAGH,SAAS,CAACO,IAAV,CAAgBJ,KAAD,IAAWA,KAAK,CAACC,EAAN,KAAaP,MAAM,CAACO,EAA9C,CAAd;;AACA,YAAIP,MAAM,CAACA,MAAP,KAAkB,MAAtB,EAA8B;AAC7BM,UAAAA,KAAK,CAACO,OAAN,GAAgB,IAAhB;AACAP,UAAAA,KAAK,CAACQ,UAAN,GAAmB,KAAnB;AACA,SAHD,MAGO,IAAId,MAAM,CAACA,MAAP,KAAkB,SAAtB,EAAiC;AACvCM,UAAAA,KAAK,CAACQ,UAAN,GAAmB,IAAnB;AACAR,UAAAA,KAAK,CAACO,OAAN,GAAgB,KAAhB;AACA;;AAEE,eAAO,EACL,GAAGd,KADE;AAELH,UAAAA,UAAU,EAAEO;AAFP,SAAP;AAID;;AAED;AACE,aAAOJ,KAAP;AAnEJ;AAqED,CAtED;;AAwEA,eAAeD,YAAf","sourcesContent":["import {\n  GET_MOVIES,\n  DELETE_MOVIE,\n  SET_FILTERS_CATEGORIES,\n\tTOGGLE_CATEGORY_STATE,\n\tEVOLUATE_MOVIE,\n} from './const';\n\nconst initState = {\n  moviesList: [],\n\tcategories: [],\n};\n\nconst movieReducer = (state = initState, action) => {\n  switch (action.type) {\n    case GET_MOVIES:\n      return {\n        ...state,\n        moviesList: action.moviesList,\n      };\n\n    case SET_FILTERS_CATEGORIES: {\n\t\t\t// const categories = action.categories.map((movie) => ({\n\t\t\t// \tid: movie.id,\n\t\t\t// \ttitle: movie.category,\n\t\t\t// \tchecked: false,\n\t\t\t// }))\n\t\t\t// const titles = categories.map((cat) => cat.title);\n\t\t\t// const filteredCategories = categories.filter(({title}, index) => {\n\t\t\t// \treturn !titles.includes(title, index + 1)\n\t\t\t// })\n\n      return {\n        ...state,\n        categories: filteredCategories,\n      };\n\t\t}\n\n    case DELETE_MOVIE: {\n\t\t\tconst copyState = [...state.moviesList];\n\t\t\tconst filtered = copyState.filter((movie) => movie.id !== action.id);\n        \n      return {\n        ...state,\n        moviesList: filtered,\n      };\n    }\n\n    case TOGGLE_CATEGORY_STATE: {\n\t\t\tconst copyStateCategories = [...state.categories];\n\t\t\tconst selectedCategory = copyStateCategories.find((cat) => cat.id === action.id);\n\t\t\tif (selectedCategory.checked) {\n\t\t\t\tselectedCategory.checked = false;\n\t\t\t} else {\n\t\t\t\tselectedCategory.checked = true;\n\t\t\t}\n        \n      return {\n        ...state,\n        categories: copyStateCategories,\n      };\n    }\n\n    case EVOLUATE_MOVIE: {\n\t\t\tconst copyState = [...state.moviesList];\n\t\t\tconst movie = copyState.find((movie) => movie.id === action.id);\n\t\t\tif (action.action === 'like') {\n\t\t\t\tmovie.setLike = true;\n\t\t\t\tmovie.setDislike = false;\n\t\t\t} else if (action.action === 'dislike') {\n\t\t\t\tmovie.setDislike = true;\n\t\t\t\tmovie.setLike = false;\n\t\t\t}\n        \n      return {\n        ...state,\n        moviesList: copyState,\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default movieReducer;\n"]},"metadata":{},"sourceType":"module"}