{"ast":null,"code":"var _jsxFileName = \"/Users/y.kotenko/Desktop/particeep/src/components/Filter/Filter.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport classNames from 'classnames';\nimport { getMovies, toggleCategoryState, setCategories } from './store/actions';\nimport LikeDislikeControl from '../LikeDislikeControl';\nimport { deleteMovie } from '../../store/actions';\nimport { Movie, MovieImageBox, MovieCategory, MovieDelete, MovieImageFader, MovieImage, MovieImageBottom, MovieTextBox, MovieTitle } from './style.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Filter = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    movie\n  } = props;\n  useEffect(() => {\n    makeCategories(moviesList);\n  }, [moviesList]);\n\n  const onDeleteMovie = id => {\n    dispatch(deleteMovie(id));\n  };\n\n  const onToggleChecked = id => {\n    dispatch(toggleCategoryState(id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.CategoriesFilter,\n    children: categories.map(category => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classNames(style.Category, category.checked ? style.CategorySelected : ''),\n      onClick: () => onToggleChecked(category.id),\n      children: category.title\n    }, category.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Filter, \"rAh3tY+Iv6hWC9AI4Dm+rCbkwNE=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Filter;\nexport default Filter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Filter\");","map":{"version":3,"sources":["/Users/y.kotenko/Desktop/particeep/src/components/Filter/Filter.js"],"names":["React","useEffect","useDispatch","classNames","getMovies","toggleCategoryState","setCategories","LikeDislikeControl","deleteMovie","Movie","MovieImageBox","MovieCategory","MovieDelete","MovieImageFader","MovieImage","MovieImageBottom","MovieTextBox","MovieTitle","Filter","props","dispatch","movie","makeCategories","moviesList","onDeleteMovie","id","onToggleChecked","style","CategoriesFilter","categories","map","category","Category","checked","CategorySelected","title"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,SACEC,SADF,EAEEC,mBAFF,EAGEC,aAHF,QAIO,iBAJP;AAMA,OAAOC,kBAAP,MAA+B,uBAA/B;AAEA,SAASC,WAAT,QAA4B,qBAA5B;AAEA,SACEC,KADF,EAEEC,aAFF,EAGEC,aAHF,EAIEC,WAJF,EAKEC,eALF,EAMEC,UANF,EAOEC,gBAPF,EAQEC,YARF,EASEC,UATF,QAUO,qBAVP;;;AAYA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAAA;;AACxB,QAAMC,QAAQ,GAAGlB,WAAW,EAA5B;AACA,QAAM;AAAEmB,IAAAA;AAAF,MAAYF,KAAlB;AAEAlB,EAAAA,SAAS,CAAC,MAAM;AACdqB,IAAAA,cAAc,CAACC,UAAD,CAAd;AACD,GAFQ,EAEN,CAACA,UAAD,CAFM,CAAT;;AAIA,QAAMC,aAAa,GAAIC,EAAD,IAAQ;AAC5BL,IAAAA,QAAQ,CAACZ,WAAW,CAACiB,EAAD,CAAZ,CAAR;AACD,GAFD;;AAIA,QAAMC,eAAe,GAAID,EAAD,IAAQ;AAC9BL,IAAAA,QAAQ,CAACf,mBAAmB,CAACoB,EAAD,CAApB,CAAR;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAEE,KAAK,CAACC,gBAAtB;AAAA,cACGC,UAAU,CAACC,GAAX,CAAgBC,QAAD,iBACd;AAEE,MAAA,SAAS,EAAE5B,UAAU,CAACwB,KAAK,CAACK,QAAP,EAAiBD,QAAQ,CAACE,OAAT,GAAmBN,KAAK,CAACO,gBAAzB,GAA4C,EAA7D,CAFvB;AAGE,MAAA,OAAO,EAAE,MAAMR,eAAe,CAACK,QAAQ,CAACN,EAAV,CAHhC;AAAA,gBAKGM,QAAQ,CAACI;AALZ,OACOJ,QAAQ,CAACN,EADhB;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CA7BD;;GAAMP,M;UACahB,W;;;KADbgB,M;AA+BN,eAAeA,MAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport classNames from 'classnames';\n\nimport {\n  getMovies,\n  toggleCategoryState,\n  setCategories,\n} from './store/actions';\n\nimport LikeDislikeControl from '../LikeDislikeControl';\n\nimport { deleteMovie } from '../../store/actions';\n\nimport {\n  Movie,\n  MovieImageBox,\n  MovieCategory,\n  MovieDelete,\n  MovieImageFader,\n  MovieImage,\n  MovieImageBottom,\n  MovieTextBox,\n  MovieTitle,\n} from './style.module.scss';\n\nconst Filter = (props) => {\n  const dispatch = useDispatch();\n  const { movie } = props;\n\n  useEffect(() => {\n    makeCategories(moviesList);\n  }, [moviesList]);\n\n  const onDeleteMovie = (id) => {\n    dispatch(deleteMovie(id));\n  }\n\n  const onToggleChecked = (id) => {\n    dispatch(toggleCategoryState(id));\n  }\n\n  return (\n    <div className={style.CategoriesFilter}>\n      {categories.map((category) => (\n        <div\n          key={category.id}\n          className={classNames(style.Category, category.checked ? style.CategorySelected : '')}\n          onClick={() => onToggleChecked(category.id)}\n        >\n          {category.title}\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default Filter;\n"]},"metadata":{},"sourceType":"module"}