{"ast":null,"code":"import { GET_MOVIES, DELETE_MOVIE, SET_FILTERS_CATEGORIES, TOGGLE_CATEGORY_STATE, EVOLUATE_MOVIE } from './const';\nconst initState = {\n  moviesList: [],\n  categories: []\n};\n\nconst movieReducer = (state = initState, action) => {\n  switch (action.type) {\n    case GET_MOVIES:\n      return { ...state,\n        moviesList: action.moviesList\n      };\n\n    case SET_FILTERS_CATEGORIES:\n      {\n        const categories = action.categories.map(movie => ({\n          id: movie.id,\n          title: movie.category,\n          checked: false\n        }));\n        const ids = categories.map(o => Number(o.id));\n        let filtered = categories.filter(({\n          id\n        }, index) => !ids.includes(id, index + 1));\n        console.log('filtered', filtered);\n        const filteredArr = categories.reduce((acc, current) => {\n          const x = acc.find(item => item.id === current.id);\n\n          if (!x) {\n            return acc.concat([current]);\n          } else {\n            return acc;\n          }\n        }, []); // const filtered = categories.filter((category, index) => {\n        // \tconsole.log(categories.indexOf(category));\n        // \treturn categories.indexOf(category.title) === index\n        // });\n        // console.log(filtered);\n\n        return { ...state,\n          categories: categories\n        };\n      }\n\n    case DELETE_MOVIE:\n      {\n        const copyState = [...state.moviesList];\n        const filtered = copyState.filter(movie => movie.id !== action.id);\n        return { ...state,\n          moviesList: filtered\n        };\n      }\n    // case TOGGLE_CATEGORY_STATE: {\n    // \tconst copyState = [...state.moviesList]\n    // \tconst likedMovie = copyState.find((movie) => movie.id === action.id);\n    // \tlikedMovie.likes += 1\n    //   return {\n    //     ...state,\n    //     moviesList: copyState,\n    //   };\n    // }\n\n    case EVOLUATE_MOVIE:\n      {\n        const copyState = [...state.moviesList];\n        const movie = copyState.find(movie => movie.id === action.id);\n\n        if (action.action === 'like') {\n          movie.setLike = true;\n          movie.setDislike = false;\n        } else if (action.action === 'dislike') {\n          movie.setDislike = true;\n          movie.setLike = false;\n        }\n\n        return { ...state,\n          moviesList: copyState\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default movieReducer;","map":{"version":3,"sources":["/Users/y.kotenko/Desktop/particeep/src/store/reducer.js"],"names":["GET_MOVIES","DELETE_MOVIE","SET_FILTERS_CATEGORIES","TOGGLE_CATEGORY_STATE","EVOLUATE_MOVIE","initState","moviesList","categories","movieReducer","state","action","type","map","movie","id","title","category","checked","ids","o","Number","filtered","filter","index","includes","console","log","filteredArr","reduce","acc","current","x","find","item","concat","copyState","setLike","setDislike"],"mappings":"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","sourcesContent":["import {\n  GET_MOVIES,\n  DELETE_MOVIE,\n  SET_FILTERS_CATEGORIES,\n\tTOGGLE_CATEGORY_STATE,\n\tEVOLUATE_MOVIE,\n} from './const';\n\nconst initState = {\n  moviesList: [],\n\tcategories: [],\n};\n\nconst movieReducer = (state = initState, action) => {\n  switch (action.type) {\n    case GET_MOVIES:\n      return {\n        ...state,\n        moviesList: action.moviesList,\n      };\n\n    case SET_FILTERS_CATEGORIES: {\n\t\t\tconst categories = action.categories.map((movie) => ({\n\t\t\t\tid: movie.id,\n\t\t\t\ttitle: movie.category,\n\t\t\t\tchecked: false,\n\t\t\t}))\n\t\t\tconst ids = categories.map(o => Number(o.id))\n\t\t\tlet filtered = categories.filter(({id}, index) => !ids.includes(id, index + 1))\n\n\t\t\tconsole.log('filtered', filtered)\n\n\t\t\tconst filteredArr = categories.reduce((acc, current) => {\n\t\t\t\tconst x = acc.find(item => item.id === current.id);\n\t\t\t\tif (!x) {\n\t\t\t\t\treturn acc.concat([current]);\n\t\t\t\t} else {\n\t\t\t\t\treturn acc;\n\t\t\t\t}\n\t\t\t}, []);\n\t\t \n\t\t\t// const filtered = categories.filter((category, index) => {\n\t\t\t// \tconsole.log(categories.indexOf(category));\n\n\t\t\t// \treturn categories.indexOf(category.title) === index\n\t\t\t// });\n\t\t\t// console.log(filtered);\n\n      return {\n        ...state,\n        categories: categories,\n      };\n\t\t}\n\n    case DELETE_MOVIE: {\n\t\t\tconst copyState = [...state.moviesList];\n\t\t\tconst filtered = copyState.filter((movie) => movie.id !== action.id);\n        \n      return {\n        ...state,\n        moviesList: filtered,\n      };\n    }\n\n    // case TOGGLE_CATEGORY_STATE: {\n\t\t// \tconst copyState = [...state.moviesList]\n\t\t// \tconst likedMovie = copyState.find((movie) => movie.id === action.id);\n\t\t// \tlikedMovie.likes += 1\n        \n    //   return {\n    //     ...state,\n    //     moviesList: copyState,\n    //   };\n    // }\n\n    case EVOLUATE_MOVIE: {\n\t\t\tconst copyState = [...state.moviesList];\n\t\t\tconst movie = copyState.find((movie) => movie.id === action.id);\n\t\t\tif (action.action === 'like') {\n\t\t\t\tmovie.setLike = true;\n\t\t\t\tmovie.setDislike = false;\n\t\t\t} else if (action.action === 'dislike') {\n\t\t\t\tmovie.setDislike = true;\n\t\t\t\tmovie.setLike = false;\n\t\t\t}\n        \n      return {\n        ...state,\n        moviesList: copyState,\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default movieReducer;\n"]},"metadata":{},"sourceType":"module"}